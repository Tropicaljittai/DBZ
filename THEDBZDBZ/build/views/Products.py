
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path
from tkinter import ttk
# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage
import tkinter as tk


OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"C:\Users\Franz\Documents\THEDBZDBZ\build\assets\frame2")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)

class Products(tk.Frame):
    def __init__(self, parent):
        tk.Frame.__init__(self, parent)
        self.configure(bg = "#FFFFFF")

        canvas = Canvas(
            self,
            bg = "#1E1E1E",
            height = 778,
            width = 1440,
            bd = 0,
            highlightthickness = 0,
            relief = "ridge"
        )

        canvas.place(x = 0, y = 0)
        canvas.create_text(
            231.0,
            32.0,
            anchor="nw",
            text="Your Products",
            fill="#F94444",
            font=("ArialRoundedMTBold", 20 * -1)
        )

        self.square_image = PhotoImage(
            file=relative_to_assets("image_1.png"))
        self.square1 = canvas.create_image(
            1209.0,
            260.0,
            image=self.square_image
        )
        


        self.style = ttk.Style(self)

        columns = ("ID", "Name", "Description", "Price")
        self.tree = ttk.Treeview(self, columns=columns, height=13, show='headings')
        self.tree.place(x=230.0, y=130.0, width=760, height=600)  # Adjust the position and size

        self.style.configure("Treeview",
                             background="#2a2d2e",
                             foreground="white",
                             rowheight=50,
                             fieldbackground="#343638",
                             bordercolor="#343638")

        self.style.map('Treeview', background=[('selected', '#F94444')])

        self.style.configure("Treeview.Heading",
                             background="#565b5e",
                             foreground="white",
                             relief="flat")

        self.style.map("Treeview.Heading",
                       background=[('active', '#F94444')])

        for col in columns:
            self.tree.heading(col, text=col, anchor=tk.CENTER)

        self.tree.column('ID', anchor=tk.CENTER, width=70)
        self.tree.column('Name', anchor=tk.CENTER, width=170)
        self.tree.column('Description', anchor=tk.CENTER, width=170)
        self.tree.column('Price', anchor=tk.CENTER, width=170)
        yscrollbar = ttk.Scrollbar(self, orient="vertical", command=self.tree.yview)
        self.tree.configure(yscrollcommand=yscrollbar.set)

        # Pack the Treeview and Scrollbar
        yscrollbar.place(x=990, y=130, height=600)

        

        

        self.entry_image_1 = PhotoImage(
            file=relative_to_assets("entry_1.png"))
        self.entry_bg_1 = canvas.create_image(
            1302.0,
            249.0,
            image=self.entry_image_1
        )
        self.descriptionEntry = Entry(self,
            bd=0,
            bg="#1E1E1E",
            fg="#FFFFFF",
            highlightthickness=0
        )
        self.descriptionEntry.place(
            x=1223.0,
            y=229.0,
            width=158.0,
            height=38.0
        )

        canvas.create_text(
            1223.0,
            210.0,
            anchor="nw",
            text="Description",
            fill="#FFFEFA",
            font=("ArialRoundedMTBold", 10 * -1)
        )

        self.image_image_2 = PhotoImage(
            file=relative_to_assets("image_2.png"))
        image_2 = canvas.create_image(
            611.0,
            435.0,
            image=self.image_image_2
        )

        self.image_image_3 = PhotoImage(
            file=relative_to_assets("image_3.png"))
        image_3 = canvas.create_image(
            1209.0,
            581.0,
            image=self.image_image_3
        )

        canvas.create_text(
            1043.0,
            441.0,
            anchor="nw",
            text="Top selling\n",
            fill="#FFFEFA",
            font=("ArialRoundedMTBold", 15 * -1)
        )

        self.button_image_1 = PhotoImage(
            file=relative_to_assets("button_1.png"))
        profile = Button(self,
            image=self.button_image_1,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_1 clicked"),
            relief="flat"
        )
        profile.place(
            x=1343.0,
            y=13.0,
            width=54.0,
            height=45.0
        )

        self.entry_image_2 = PhotoImage(
            file=relative_to_assets("entry_2.png"))
        self.entry_bg_2 = canvas.create_image(
            1119.5,
            179.0,
            image=self.entry_image_2
        )
        self.nameEntry = Entry(self,
            bd=0,
            bg="#1E1E1E",
            fg="#FFFFFF",
            highlightthickness=0
        )
        self.nameEntry.place(
            x=1042.0,
            y=159.0,
            width=155.0,
            height=38.0
        )

        self.entry_image_3 = PhotoImage(
            file=relative_to_assets("entry_3.png"))
        self.entry_bg_3 = canvas.create_image(
            1119.0,
            249.0,
            image=self.entry_image_3
        )
        self.priceEntry= Entry(self,
            bd=0,
            bg="#1E1E1E",
            fg="#FFFFFF",
            highlightthickness=0
        )
        self.priceEntry.place(
            x=1041.0,
            y=229.0,
            width=156.0,
            height=38.0
        )

        self.entry_image_4 = PhotoImage(
            file=relative_to_assets("entry_4.png"))
        self.entry_bg_4 = canvas.create_image(
            1303.5,
            179.0,
            image=self.entry_image_4
        )
        self.idEntry = Entry(self,
            bd=0,
            bg="#1E1E1E",
            fg="#FFFFFF",
            highlightthickness=0
        )
        self.idEntry.place(
            x=1226.0,
            y=159.0,
            width=155.0,
            height=38.0
        )



        canvas.create_text(
            1043.0,
            141.0,
            anchor="nw",
            text="Name",
            fill="#FFFEFA",
            font=("ArialRoundedMTBold", 10 * -1)
        )

        canvas.create_text(
            1043.0,
            208.0,
            anchor="nw",
            text="Default Price",
            fill="#FFFEFA",
            font=("ArialRoundedMTBold", 10 * -1)
        )

        canvas.create_text(
            1225.0,
            141.0,
            anchor="nw",
            text="ID",
            fill="#FFFEFA",
            font=("ArialRoundedMTBold", 10 * -1)
        )

        self.button_image_2 = PhotoImage(
            file=relative_to_assets("button_2.png"))
        self.addBtn = Button(self,
            image=self.button_image_2,
            borderwidth=0,
            highlightthickness=0,
            relief="flat"
        )
        self.addBtn.place(
            x=1070.0,
            y=297.0,
            width=88.5999984741211,
            height=27.318334579467773
        )

        self.button_image_3 = PhotoImage(
            file=relative_to_assets("button_3.png"))
        self.deleteBtn = Button(self,
            image=self.button_image_3,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_3 clicked"),
            relief="flat"
        )
        self.deleteBtn.place(
            x=1070.0,
            y=336.0,
            width=92.0,
            height=30.0
        )

        self.button_image_4 = PhotoImage(
            file=relative_to_assets("button_4.png"))
        self.clearBtn = Button(self,
            image= self.button_image_4,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_4 clicked"),
            relief="flat"
        )
        self.clearBtn.place(
            x=1177.0,
            y=336.0,
            width=90.0,
            height=30.0
        )

        self.button_image_5 = PhotoImage(
            file=relative_to_assets("button_5.png"))
        self.updateBtn = Button(self,
            image=self.button_image_5,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_5 clicked"),
            relief="flat"
        )
        self.updateBtn.place(
            x=1178.0,
            y=297.0,
            width=89.0,
            height=27.0
        )

        self.button_image_6 = PhotoImage(
            file=relative_to_assets("button_6.png"))
        self.variantsBtn = Button(self,
            image=self.button_image_6,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_6 clicked"),
            relief="flat"
        )
        self.variantsBtn.place(
            x=1272.0,
            y=291.0,
            width=94.0,
            height=83.0
        )

        self.button_image_7 = PhotoImage(
            file=relative_to_assets("button_7.png"))
        self.searchBtn = Button(self,
            image= self.button_image_7,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_7 clicked"),
            relief="flat"
        )
        self.searchBtn.place(
            x=889.0,
            y=73.0,
            width=46.0,
            height=45.0
        )

        self.entry_image_5 = PhotoImage(
            file=relative_to_assets("entry_5.png"))
        self.entry_bg_5 = canvas.create_image(
            552.5,
            96.0,
            image=self.entry_image_5
        )
        self.searchEntry = Entry(self,
            bd=0,
            bg="#2D2D2D",
            fg="#FFFFFF",
            highlightthickness=0
        )
        self.searchEntry.place(
            x=243.0,
            y=76.0,
            width=619.0,
            height=38.0
        )

        canvas.create_rectangle(
            0.0,
            0.0,
            204.0,
            778.0,
            fill="#2D2D2D",
            outline="")

        self.button_image_8 = PhotoImage(
            file=relative_to_assets("button_8.png"))
        self.logOut = Button(self,
            image=self.button_image_8,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_8 clicked"),
            relief="flat"
        )
        self.logOut.place(
            x=38.0,
            y=642.0,
            width=119.0,
            height=57.0
        )

        self.image_image_4 = PhotoImage(
            file=relative_to_assets("image_4.png"))
        self.image_4 = canvas.create_image(
            101.0,
            211.0,
            image=self.image_image_4
        )

        self.button_image_9 = PhotoImage(
            file=relative_to_assets("button_9.png"))
        self.customers = Button(self,
            image=self.button_image_9,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_9 clicked"),
            relief="flat"
        )
        self.customers.place(
            x=23.0,
            y=284.0,
            width=135.0,
            height=29.0
        )

        self.button_image_10 = PhotoImage(
            file=relative_to_assets("button_10.png"))
        self.supply = Button(self,
            image=self.button_image_10,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_10 clicked"),
            relief="flat"
        )
        self.supply.place(
            x=25.0,
            y=240.0,
            width=103.0,
            height=35.0
        )

        self.button_image_11 = PhotoImage(
            file=relative_to_assets("button_11.png"))
        self.product = Button(self,
            image=self.button_image_11,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_11 clicked"),
            relief="flat"
        )
        self.product.place(
            x=23.0,
            y=196.0,
            width=113.0,
            height=34.0
        )

        self.button_image_12 = PhotoImage(
            file=relative_to_assets("button_12.png"))
        self.order = Button(self,
            image=self.button_image_12,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_12 clicked"),
            relief="flat"
        )
        self.order.place(
            x=25.0,
            y=147.0,
            width=103.0,
            height=38.0
        )

        self.button_image_13 = PhotoImage(
            file=relative_to_assets("button_13.png"))
        self.dash = Button(self,
            image=self.button_image_13,
            borderwidth=0,
            highlightthickness=0,
            relief="flat"
        )
        self.dash.place(
            x=25.0,
            y=100.0,
            width=135.0,
            height=32.0
        )

        canvas.create_text(
            74.0,
            21.0,
            anchor="nw",
            text="DBZ",
            fill="#F94444",
            font=("ArialRoundedMTBold", 24 * -1)
        )
    # def set_column_color(tree, col, bg_color, text_color):
    #     style = ttk.Style()
    #     style.configure(f"Treeview.{col}", background=bg_color, foreground=text_color)

    # def set_row_color(tree, row, bg_color, text_color):
    #     style = ttk.Style()
    #     style.configure(f"Treeview.{row}", background=bg_color, foreground=text_color)