
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage
import tkinter as tk
from tkinter import ttk

OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"C:\Users\Franz\Documents\THEDBZDBZ\build\assets\frame8")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)

class orderSupply(tk.Frame):
    def __init__(self, parent):
        tk.Frame.__init__(self, parent)
        self.configure(bg = "#FFFFFF")

        canvas = Canvas(
            self,
            bg = "#1E1E1E",
            height = 778,
            width = 1440,
            bd = 0,
            highlightthickness = 0,
            relief = "ridge"
        )

        canvas.place(x = 0, y = 0)

        self.style = ttk.Style(self)

        columns = ("Name", "Description", "Price")
        self.tree = ttk.Treeview(self, columns=columns, height=13, show='headings')
        self.tree.place(x=1000, y=130.0, width=410, height=510)  # Adjust the position and size
        self.style.configure("Treeview",
                             background="#2a2d2e",
                             foreground="white",
                             rowheight=50,
                             fieldbackground="#343638",
                             bordercolor="#343638")

        self.style.map('Treeview', background=[('selected', '#F94444')])

        self.style.configure("Treeview.Heading",
                             background="#565b5e",
                             foreground="white",
                             relief="flat")

        self.style.map("Treeview.Heading",
                       background=[('active', '#F94444')])

        for col in columns:
            self.tree.heading(col, text=col, anchor=tk.CENTER)

        

        self.tree.column('Name', anchor=tk.CENTER, width=70)
        self.tree.column('Description', anchor=tk.CENTER, width=70)
        self.tree.column('Price', anchor=tk.CENTER, width=70)
        yscrollbar = ttk.Scrollbar(self, orient="vertical", command=self.tree.yview)
        self.tree.configure(yscrollcommand=yscrollbar.set)

        # Pack the Treeview and Scrollbar
        yscrollbar.place(x=1410, y=130, height=510)

        


        columns2 = ("VariantID", "ProductName", "Variant","Size","Quantity","TotalPrice")
        self.tree2 = ttk.Treeview(self, columns=columns2, height=13, show='headings')
        self.tree2.place(x=240, y=280.0, width=720, height=380)  # Adjust the position and size
        self.style.configure("Treeview",
                             background="#2a2d2e",
                             foreground="white",
                             rowheight=50,
                             fieldbackground="#343638",
                             bordercolor="#343638")

    

        for col in columns2:
            self.tree2.heading(col, text=col, anchor=tk.CENTER)
            
        self.tree2.column('VariantID', anchor=tk.CENTER, width=70)
        self.tree2.column('ProductName', anchor=tk.CENTER, width=70)
        self.tree2.column('Variant', anchor=tk.CENTER, width=70)
        self.tree2.column('Size', anchor=tk.CENTER, width=70)
        self.tree2.column('Quantity', anchor=tk.CENTER, width=70)
        self.tree2.column('TotalPrice', anchor=tk.CENTER, width=70)
       
        yscrollbar2 = ttk.Scrollbar(self, orient="vertical", command=self.tree.yview)
        self.tree2.configure(yscrollcommand=yscrollbar2.set)

        # Pack the Treeview and Scrollbar
        yscrollbar2.place(x=950, y=280, height=380)

        self.backbutton_image_3 = PhotoImage(
        file=relative_to_assets("backBtn.png"))
        self.backbutton_3 = Button(self,
            image=self.backbutton_image_3,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_3 clicked"),
            relief="flat"
        )
        self.backbutton_3.place(
            x=1324.0,
            y=96.0,
            width=91.0,
            height=30.0
        )


       
        self.image_image_1 = PhotoImage(
            file=relative_to_assets("image_1.png"))
        self.image_1 = canvas.create_image(
            437.0,
            164.0,
            image=self.image_image_1
        )

        self.image_image_2 = PhotoImage(
            file=relative_to_assets("image_2.png"))
        self.image_2 = canvas.create_image(
            804.0,
            164.0,
            image=self.image_image_2
        )
        self.style = ttk.Style(self)
      
        self.addressDets = tk.Label(self,text="",fg="#C9C9C7",bg="#2D2D2D",font=("ArialRoundedMTBold", 12 * -1))
        self.addressDets.place(x=252,y=120)

        self.contactDets = tk.Label(self,text="",fg="#C9C9C7",bg="#2D2D2D",font=("ArialRoundedMTBold", 12 * -1))
        self.contactDets.place(x=662,y=126)

    
        self.emailDets = tk.Label(self,text="",fg="#C9C9C7",bg="#2D2D2D",font=("ArialRoundedMTBold", 12  * -1))
        self.emailDets.place(x=662,y=204)

    

        self.suppDesc = tk.Label(self,text="",fg="#C9C9C7",bg="#2D2D2D",font=("ArialRoundedMTBold", 12 * -1))
        self.suppDesc.place(x=252,y=193)

        
        self.suppName = tk.Label(self,text="",fg="#F94444",bg="#1E1E1E",font=("ArialRoundedMTBold", 20 * -1))
        self.suppName.place(x=283,y=25)

        self.pay_combobox = ttk.Combobox(self, values=["Cash","Debit","E-money"])
        self.pay_combobox.set("Select Payment Type")  
        self.pay_combobox.place(x=640, y=708, width=110, height=20)

        self.sum = tk.Label(self,text="",fg="#F94444",bg="#1E1E1E",font=("ArialRoundedMTBold", 12))
        self.sum.place(x=362,y=705)
        

        canvas.create_text(
            252.0,
            94.0,
            anchor="nw",
            text="Address:",
            fill="#FFFEFA",
            font=("ArialRoundedMTBold", 15 * -1)
        )

        canvas.create_text(
            661.0,
            101.0,
            anchor="nw",
            text="Contact Number:",
            fill="#FFFEFA",
            font=("ArialRoundedMTBold", 15 * -1)
        )

        canvas.create_text(
            662.0,
            181.0,
            anchor="nw",
            text="Email Address:",
            fill="#FFFEFA",
            font=("ArialRoundedMTBold", 15 * -1)
        )

        canvas.create_text(
            252.0,
            168.0,
            anchor="nw",
            text="Description:",
            fill="#FFFEFA",
            font=("ArialRoundedMTBold", 15 * -1)
        )

        self.image_image_3 = PhotoImage(
            file=relative_to_assets("image_3.png"))
        self.image_3 = canvas.create_image(
            599.0,
            462.0,
            image=self.image_image_3
        )

        self.image_image_4 = PhotoImage(
            file=relative_to_assets("image_4.png"))
        self.image_4 = canvas.create_image(
            599.0,
            712.0,
            image=self.image_image_4
        )

        self.image_image_5 = PhotoImage(
            file=relative_to_assets("image_5.png"))
        self.image_5 = canvas.create_image(
            413.0,
            718.0,
            image=self.image_image_5
        )

        self.image_image_6 = PhotoImage(
            file=relative_to_assets("image_6.png"))
        self.image_6 = canvas.create_image(
            1207.0,
            360.0,
            image=self.image_image_6
        )

        self.button_image_1 = PhotoImage(
            file=relative_to_assets("button_1.png"))
        self.profilebutton_1 = Button(self,
            image=self.button_image_1,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_1 clicked"),
            relief="flat"
        )
        self.profilebutton_1.place(
            x=1343.0,
            y=13.0,
            width=54.0,
            height=45.0
        )

        self.button_image_2 = PhotoImage(
            file=relative_to_assets("button_2.png"))
        self.backbutton_2 = Button(self,
            image=self.button_image_2,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_2 clicked"),
            relief="flat"
        )
        self.backbutton_2.place(
            x=235.0,
            y=23.0,
            width=48.46808624267578,
            height=34.0
        )

        self.button_image_3 = PhotoImage(
            file=relative_to_assets("button_3.png"))
        self.createOrderbutton_3 = Button(self,
            image=self.button_image_3,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_3 clicked"),
            relief="flat"
        )
        self.createOrderbutton_3.place(
            x=840.0,
            y=690.0,
            width=100.0,
            height=54.0
        )

        canvas.create_text(
            1016.0,
            97.0,
            anchor="nw",
            text="Catalogue",
            fill="#FFFFFF",
            font=("ArialRoundedMTBold", 15 * -1)
        )

        canvas.create_text(
            262.0,
            709.0,
            anchor="nw",
            text="Total Price:",
            fill="#F84343",
            font=("ArialRoundedMTBold", 15 * -1)
        )

        canvas.create_text(
            492.0,
            709.0,
            anchor="nw",
            text="Payment Method:",
            fill="#F84343",
            font=("ArialRoundedMTBold", 15 * -1)
        )

        canvas.create_rectangle(
            0.0,
            0.0,
            204.0,
            778.0,
            fill="#2D2D2D",
            outline="")

        self.button_image_4 = PhotoImage(
            file=relative_to_assets("button_4.png"))
        self.logoutbutton_4 = Button(self,
            image=self.button_image_4,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_4 clicked"),
            relief="flat"
        )
        self.logoutbutton_4.place(
            x=38.0,
            y=642.0,
            width=119.0,
            height=57.0
        )

        self.image_image_7 = PhotoImage(
            file=relative_to_assets("image_7.png"))
        self.image_7 = canvas.create_image(
            101.0,
            255.0,
            image=self.image_image_7
        )

        self.button_image_5 = PhotoImage(
            file=relative_to_assets("button_5.png"))
        self.custbutton_5 = Button(self,
            image=self.button_image_5,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_5 clicked"),
            relief="flat"
        )
        self.custbutton_5.place(
            x=23.0,
            y=284.0,
            width=135.0,
            height=29.0
        )

        self.button_image_6 = PhotoImage(
            file=relative_to_assets("button_6.png"))
        self.supplybutton_6 = Button(self,
            image=self.button_image_6,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_6 clicked"),
            relief="flat"
        )
        self.supplybutton_6.place(
            x=25.0,
            y=240.0,
            width=103.0,
            height=35.0
        )

        self.button_image_7 = PhotoImage(
            file=relative_to_assets("button_7.png"))
        self.prodbutton_7 = Button(self,
            image=self.button_image_7,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_7 clicked"),
            relief="flat"
        )
        self.prodbutton_7.place(
            x=23.0,
            y=196.0,
            width=113.0,
            height=34.0
        )

        self.button_image_8 = PhotoImage(
            file=relative_to_assets("button_8.png"))
        self.ordersbutton_8 = Button(self,
            image=self.button_image_8,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_8 clicked"),
            relief="flat"
        )
        self.ordersbutton_8.place(
            x=25.0,
            y=147.0,
            width=103.0,
            height=38.0
        )

        self.button_image_9 = PhotoImage(
            file=relative_to_assets("button_9.png"))
        self.dashbutton_9 = Button(self,
            image= self.button_image_9,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_9 clicked"),
            relief="flat"
        )
        self.dashbutton_9.place(
            x=25.0,
            y=100.0,
            width=135.0,
            height=32.0
        )

        canvas.create_text(
            74.0,
            21.0,
            anchor="nw",
            text="DBZ",
            fill="#F94444",
            font=("ArialRoundedMTBold", 24 * -1)
        )

        self.image_image_8 = PhotoImage(
            file=relative_to_assets("image_8.png"))
        self.image_8 = canvas.create_image(
            1206.0,
            710.0,
            image=self.image_image_8
        )

        self.button_image_10 = PhotoImage(
            file=relative_to_assets("button_10.png"))
        self.addbutton_10 = Button(self,
            image=self.button_image_10,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_10 clicked"),
            relief="flat"
        )
        self.addbutton_10.place(
            x=1232.0,
            y=680.0,
            width=80.0,
            height=40.0
        )

        self.button_image_11 = PhotoImage(
            file=relative_to_assets("button_11.png"))
        self.updatebutton_11 = Button(self,
            image=self.button_image_11,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_11 clicked"),
            relief="flat"
        )
        self.updatebutton_11.place(
            x=1321.0,
            y=680.0,
            width=73.0,
            height=40.0
        )

        canvas.create_text(
            1008.0,
            702.0,
            anchor="nw",
            text="Quantity:",
            fill="#F84343",
            font=("ArialRoundedMTBold", 15 * -1)
        )

        self.entry_image_1 = PhotoImage(
            file=relative_to_assets("entry_1.png"))
        self.entry_bg_1 = canvas.create_image(
            1147.0,
            710.0,
            image=self.entry_image_1
        )
        self.qtyentry_1 = Entry(self,
            bd=0,
            bg="#1E1E1E",
            fg="#FFFFFF",
            highlightthickness=0
        )
        self.qtyentry_1.place(
            x=1086.0,
            y=690.0,
            width=122.0,
            height=38.0
        )

        self.delbutton_image_1 = PhotoImage(
        file=relative_to_assets("del.png"))
        self.delbutton_1 = Button(self,
            image=self.delbutton_image_1,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("del clicked"),
            relief="flat"
        )
        self.delbutton_1.place(
            x=1275.0,
            y=715.0,
            width=73.0,
            height=40.0
        )



