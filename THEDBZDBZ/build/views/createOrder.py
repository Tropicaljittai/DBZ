
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path

# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage
import tkinter as tk
from tkinter import ttk

import customtkinter


OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"C:\Users\Franz\Documents\THEDBZDBZ\build\assets\frame6")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)


class createOrder(tk.Frame):
    def __init__(self, parent):
        tk.Frame.__init__(self, parent)
        self.configure(bg = "#FFFFFF")

        

        canvas = Canvas(
            self,
            bg="#1E1E1E",
            height=778,
            width=1440,
            bd=0,
            highlightthickness=0,
            relief="ridge"
        )

        canvas.place(x=0, y=0)
        canvas.create_text(
            281.0,
            28.0,
            anchor="nw",
            text="New Order",
            fill="#F94444",
            font=("ArialRoundedMTBold", 20 * -1)
        )

       
        self.style = ttk.Style(self)

        columns = ("Name", "Description", "Price")
        self.tree = ttk.Treeview(self, columns=columns, height=13, show='headings')
        self.tree.place(x=950, y=130.0, width=460, height=510)  # Adjust the position and size
        self.style.configure("Treeview",
                             background="#2a2d2e",
                             foreground="white",
                             rowheight=50,
                             fieldbackground="#343638",
                             bordercolor="#343638")

        self.style.map('Treeview', background=[('selected', '#F94444')])

        self.style.configure("Treeview.Heading",
                             background="#565b5e",
                             foreground="white",
                             relief="flat")

        self.style.map("Treeview.Heading",
                       background=[('active', '#F94444')])

        for col in columns:
            self.tree.heading(col, text=col, anchor=tk.CENTER)

        

        self.tree.column('Name', anchor=tk.CENTER, width=70)
        self.tree.column('Description', anchor=tk.CENTER, width=70)
        self.tree.column('Price', anchor=tk.CENTER, width=70)
        yscrollbar = ttk.Scrollbar(self, orient="vertical", command=self.tree.yview)
        self.tree.configure(yscrollcommand=yscrollbar.set)

        # Pack the Treeview and Scrollbar
        yscrollbar.place(x=1400, y=130, height=510)

        

        self.backbutton_image_3 = PhotoImage(
        file=relative_to_assets("backBtn.png"))
        self.backbutton_3 = Button(self,
            image=self.backbutton_image_3,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_3 clicked"),
            relief="flat"
        )
        self.backbutton_3.place(
            x=1324.0,
            y=96.0,
            width=91.0,
            height=30.0
        )

        columns2 = ("VariantID", "ProductName", "Variant","Size","Quantity","TotalPrice")
        self.tree2 = ttk.Treeview(self, columns=columns2, height=13, show='headings')
        self.tree2.place(x=230, y=75.0, width=670, height=570)  # Adjust the position and size
        self.style.configure("Treeview",
                             background="#2a2d2e",
                             foreground="white",
                             rowheight=50,
                             fieldbackground="#343638",
                             bordercolor="#343638")

    

        for col in columns2:
            self.tree2.heading(col, text=col, anchor=tk.CENTER)
            
        self.tree2.column('VariantID', anchor=tk.CENTER, width=70)
        self.tree2.column('ProductName', anchor=tk.CENTER, width=70)
        self.tree2.column('Variant', anchor=tk.CENTER, width=70)
        self.tree2.column('Size', anchor=tk.CENTER, width=70)
        self.tree2.column('Quantity', anchor=tk.CENTER, width=70)
        self.tree2.column('TotalPrice', anchor=tk.CENTER, width=70)
       
        yscrollbar2 = ttk.Scrollbar(self, orient="vertical", command=self.tree.yview)
        self.tree2.configure(yscrollcommand=yscrollbar2.set)

        # Pack the Treeview and Scrollbar
        yscrollbar2.place(x=900, y=75, height=570)


       
        self.button_image_1 = PhotoImage(
            file=relative_to_assets("button_1.png"))
        self.profilebutton_1 = Button(self,
            image=self.button_image_1,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_1 clicked"),
            relief="flat"
        )
        self.profilebutton_1.place(
            x=1343.0,
            y=13.0,
            width=54.0,
            height=45.0
        )

        self.button_image_2 = PhotoImage(
            file=relative_to_assets("button_2.png"))
        self.arrowbutton_2 = Button(self,
            image=self.button_image_2,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_2 clicked"),
            relief="flat"
        )
        self.arrowbutton_2.place(
            x=225.0,
            y=23.0,
            width=48.46808624267578,
            height=34.0
        )

        self.image_image_1 = PhotoImage(
            file=relative_to_assets("image_1.png"))
        self.image_1 = canvas.create_image(
            574.0,
            362.0,
            image=self.image_image_1
        )

        self.image_image_2 = PhotoImage(
            file=relative_to_assets("image_2.png"))
        self.image_2 = canvas.create_image(
            574.0,
            710.0,
            image=self.image_image_2
        )

        self.image_image_3 = PhotoImage(
            file=relative_to_assets("image_3.png"))
        self.image_3 = canvas.create_image(
            405.0,
            710.0,
            image=self.image_image_3
        )

        self.image_image_4 = PhotoImage(
            file=relative_to_assets("image_4.png"))
        self.image_4 = canvas.create_image(
            1181.0,
            362.0,
            image=self.image_image_4
        )

        self.image_image_5 = PhotoImage(
            file=relative_to_assets("image_5.png"))
        self.image_5 = canvas.create_image(
            1179.0,
            710.0,
            image=self.image_image_5
        )

        # button_image_3 = PhotoImage(
        #     file=relative_to_assets("button_3.png"))
        # button_3 = Button(
        #     image=button_image_3,
        #     borderwidth=0,
        #     highlightthickness=0,
        #     command=lambda: print("button_3 clicked"),
        #     relief="flat"
        # )
        # button_3.place(
        #     x=1324.0,
        #     y=96.0,
        #     width=91.0,
        #     height=30.0
        # )

        self.button_image_4 = PhotoImage(
            file=relative_to_assets("button_4.png"))
        self.invoicebutton_4 = Button(self,
            image=self.button_image_4,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_4 clicked"),
            relief="flat"
        )
        self.invoicebutton_4.place(
            x=768.0,
            y=695.0,
            width=149.0,
            height=30.0
        )

        canvas.create_text(
            252.0,
            701.0,
            anchor="nw",
            text="Total Price:",
            fill="#F84343",
            font=("ArialRoundedMTBold", 15 * -1)
        )

        self.sum = tk.Label(self,text="",fg="#F94444",bg="#1E1E1E",font=("ArialRoundedMTBold", 12))
        self.sum.place(x=350,y=698)

        canvas.create_text(
            958.0,
            701.0,
            anchor="nw",
            text="Quantity:",
            fill="#F84343",
            font=("ArialRoundedMTBold", 15 * -1)
        )

        canvas.create_text(
            553.0,
            680.0,
            anchor="nw",
            text="Customer:",
            fill="#F84343",
            font=("ArialRoundedMTBold", 15 * -1)
        )

        canvas.create_text(
            962.0,
            95.0,
            anchor="nw",
            text="Your Catalogue",
            fill="#FFFFFF",
            font=("ArialRoundedMTBold", 15 * -1)
        )

        canvas.create_text(
            503.0,
            721.0,
            anchor="nw",
            text="Payment Method:",
            fill="#F84343",
            font=("ArialRoundedMTBold", 15 * -1)
        )

        canvas.create_rectangle(
            0.0,
            0.0,
            204.0,
            778.0,
            fill="#2D2D2D",
            outline="")

        self.button_image_5 = PhotoImage(
            file=relative_to_assets("button_5.png"))
        self.logoutbutton_5 = Button(self,
            image=self.button_image_5,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_5 clicked"),
            relief="flat"
        )
        self.logoutbutton_5.place(
            x=38.0,
            y=642.0,
            width=119.0,
            height=57.0
        )

        self.image_image_6 = PhotoImage(
            file=relative_to_assets("image_6.png"))
        self.image_6 = canvas.create_image(
            101.0,
            165.0,
            image=self.image_image_6
        )

        self.button_image_6 = PhotoImage(
            file=relative_to_assets("button_6.png"))
        self.customersbutton_6 = Button(self,
            image=self.button_image_6,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_6 clicked"),
            relief="flat"
        )
        self.customersbutton_6.place(
            x=23.0,
            y=284.0,
            width=135.0,
            height=29.0
        )

        self.button_image_7 = PhotoImage(
            file=relative_to_assets("button_7.png"))
        self.supplybutton_7 = Button(self,
            image=self.button_image_7,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_7 clicked"),
            relief="flat"
        )
        self.supplybutton_7.place(
            x=25.0,
            y=240.0,
            width=103.0,
            height=35.0
        )

        self.button_image_8 = PhotoImage(
            file=relative_to_assets("button_8.png"))
        self.prodbutton_8 = Button(self,
            image=self.button_image_8,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_8 clicked"),
            relief="flat"
        )
        self.prodbutton_8.place(
            x=23.0,
            y=196.0,
            width=113.0,
            height=34.0
        )

        self.button_image_9 = PhotoImage(
            file=relative_to_assets("button_9.png"))
        self.ordersbutton_9 = Button(self,
            image=self.button_image_9,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_9 clicked"),
            relief="flat"
        )
        self.ordersbutton_9.place(
            x=25.0,
            y=147.0,
            width=103.0,
            height=38.0
        )

        self.button_image_10 = PhotoImage(
            file=relative_to_assets("button_10.png"))
        self.dashbutton_10 = Button(self,
            image=self.button_image_10,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_10 clicked"),
            relief="flat"
        )
        self.dashbutton_10.place(
            x=25.0,
            y=100.0,
            width=135.0,
            height=32.0
        )

        canvas.create_text(
            74.0,
            21.0,
            anchor="nw",
            text="DBZ",
            fill="#F94444",
            font=("ArialRoundedMTBold", 24 * -1)
        )

        self.entry_image_1 = PhotoImage(
            file=relative_to_assets("entry_1.png"))
        self.entry_bg_1 = canvas.create_image(
            1122.5,
            710.0,
            image=self.entry_image_1
        )
        self.qtyentry_1 = Entry(self,
            bd=0,
            bg="#1E1E1E",
            fg="#FFFFFF",
            highlightthickness=0
        )
        self.qtyentry_1.place(
            x=1045.0,
            y=690.0,
            width=155.0,
            height=38.0
        )

        self.button_image_11 = PhotoImage(
            file=relative_to_assets("button_11.png"))
        self.addbutton_11 = Button(self,
            image=self.button_image_11,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_11 clicked"),
            relief="flat"
        )
        self.addbutton_11.place(
            x=1240.0,
            y=672.0,
            width=73.0,
            height=40.0
        )

        self.button_image_12 = PhotoImage(
            file=relative_to_assets("button_12.png"))
        self.updatebutton_12 = Button(self,
            image=self.button_image_12,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_12 clicked"),
            relief="flat"
        )
        self.updatebutton_12.place(
            x=1320.0,
            y=672.0,
            width=73.0,
            height=40.0
        )


        self.delbutton_image_1 = PhotoImage(
        file=relative_to_assets("del.png"))
        self.delbutton_1 = Button(self,
            image=self.delbutton_image_1,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("del clicked"),
            relief="flat"
        )
        self.delbutton_1.place(
            x=1280.0,
            y=710.0,
            width=73.0,
            height=40.0
        )
                    