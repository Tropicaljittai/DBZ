
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path
import tkinter as tk
from tkinter import ttk
# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage


OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"C:\Users\Franz\Documents\THEDBZDBZ\build\assets\frame3")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)

class Variants(tk.Frame):
    def __init__(self, parent):
        tk.Frame.__init__(self, parent)
        self.configure(bg = "#FFFFFF")

        canvas = Canvas(
            self,
            bg = "#1E1E1E",
            height = 778,
            width = 1440,
            bd = 0,
            highlightthickness = 0,
            relief = "ridge"
        )

        canvas.place(x = 0, y = 0)
        
        
        self.prodName = tk.Label(self,text="",fg="#F94444",bg="#1E1E1E",font=("ArialRoundedMTBold", 20 * -1))
        self.prodName.place(x=252,y=97)
        self.style = ttk.Style(self)
       
        columns = ("VariantId" ,
                "Variant" ,
                "Size" ,
                "Stock" ,
                "ComingStock",
                "AdditionalPrice" ,
                "Description")
        
        self.tree = ttk.Treeview(self, columns=columns, height=13, show='headings')
        self.tree.place(x=230.0, y=130.0, width=760, height=600)  # Adjust the position and size

        self.style.configure("Treeview",
                             background="#2a2d2e",
                             foreground="white",
                             rowheight=50,
                             fieldbackground="#343638",
                             bordercolor="#343638")

        self.style.map('Treeview', background=[('selected', '#F94444')])

        self.style.configure("Treeview.Heading",
                             background="#565b5e",
                             foreground="white",
                             relief="flat")

        self.style.map("Treeview.Heading",
                       background=[('active', '#F94444')])

        for col in columns:
            self.tree.heading(col, text=col, anchor="center")

        self.tree.column('VariantId', anchor=tk.CENTER, width=70)
        self.tree.column('Variant', anchor=tk.CENTER, width=100)
        self.tree.column('Size', anchor=tk.CENTER, width=100)
        self.tree.column('Stock', anchor=tk.CENTER, width=100)
        self.tree.column('ComingStock', anchor=tk.CENTER, width=100)
        self.tree.column('AdditionalPrice', anchor=tk.CENTER, width=100)
        self.tree.column('Description', anchor=tk.CENTER, width=100)
       
        yscrollbar = ttk.Scrollbar(self, orient="vertical", command=self.tree.yview)
        self.tree.configure(yscrollcommand=yscrollbar.set)

        # Pack the Treeview and Scrollbar
        yscrollbar.place(x=990, y=130, height=600)

        self.image_image_1 = PhotoImage(
            file=relative_to_assets("image_1.png"))
        self.image_1 = canvas.create_image(
            1204.0,
            618.0,
            image= self.image_image_1
        )

        self.image_image_2 = PhotoImage(
            file=relative_to_assets("image_2.png"))
        self.image_2 = canvas.create_image(
            606.0,
            440.0,
            image=self.image_image_2
        )

        canvas.create_text(
            1028.0,
            504.0,
            anchor="nw",
            text="Top selling\n",
            fill="#FFFEFA",
            font=("ArialRoundedMTBold", 15 * -1)
        )

        self.button_image_1 = PhotoImage(
            file=relative_to_assets("button_1.png"))
        self.profile = Button(self,
            image=self.button_image_1,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_1 clicked"),
            relief="flat"
        )
        self.profile.place(
            x=1343.0,
            y=13.0,
            width=54.0,
            height=45.0
        )

        self.button_image_2 = PhotoImage(
            file=relative_to_assets("button_2.png"))
        self.back = Button(self,
            image=self.button_image_2,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_2 clicked"),
            relief="flat"
        )
        self.back.place(
            x=215.0,
            y=39.0,
            width=48.46808624267578,
            height=34.0
        )

        self.image_image_3 = PhotoImage(
            file=relative_to_assets("image_3.png"))
        self.image_3 = canvas.create_image(
            1200.0,
            296.0,
            image=self.image_image_3
        )

        canvas.create_text(
            1216.0,
            215.0,
            anchor="nw",
            text="Added Price",
            fill="#FFFEFA",
            font=("ArialRoundedMTBold", 10 * -1)
        )

        self.entry_image_1 = PhotoImage(
            file=relative_to_assets("entry_1.png"))
        self.entry_bg_1 = canvas.create_image(
            1110.5,
            180.0,
            image=self.entry_image_1
        )
        self.variantentry_1 = Entry(self,
            bd=0,
            bg="#1E1E1E",
            fg="#FFFFFF",
            highlightthickness=0
        )
        self.variantentry_1.place(
            x=1033.0,
            y=160.0,
            width=155.0,
            height=38.0
        )

        self.entry_image_2 = PhotoImage(
            file=relative_to_assets("entry_2.png"))
        self.entry_bg_2 = canvas.create_image(
            1110.5,
            250.0,
            image=self.entry_image_2
        )
        self.stockentry_2 = Entry(self,
            bd=0,
            bg="#1E1E1E",
            fg="#FFFFFF",
            highlightthickness=0
        )
        self.stockentry_2.place(
            x=1033.0,
            y=230.0,
            width=155.0,
            height=38.0
        )

        self.entry_image_3 = PhotoImage(
            file=relative_to_assets("entry_3.png"))
        self.entry_bg_3 = canvas.create_image(
            1295.5,
            250.0,
            image=self.entry_image_3
        )
        self.priceentry_3 = Entry(self,
            bd=0,
            bg="#1E1E1E",
            fg="#FFFFFF",
            highlightthickness=0
        )
        self.priceentry_3.place(
            x=1218.0,
            y=230.0,
            width=155.0,
            height=38.0
        )

        self.entry_image_4 = PhotoImage(
            file=relative_to_assets("entry_4.png"))
        self.entry_bg_4 = canvas.create_image(
            1294.5,
            180.0,
            image=self.entry_image_4
        )
        self.sizeentry_4 = Entry(self,
            bd=0,
            bg="#1E1E1E",
            fg="#FFFFFF",
            highlightthickness=0
        )
        self.sizeentry_4.place(
            x=1217.0,
            y=160.0,
            width=155.0,
            height=38.0
        )

        canvas.create_text(
            1032.0,
            215.0,
            anchor="nw",
            text="Stock",
            fill="#FFFEFA",
            font=("ArialRoundedMTBold", 10 * -1)
        )

        self.entry_image_5 = PhotoImage(
            file=relative_to_assets("entry_5.png"))
        self.entry_bg_5 = canvas.create_image(
            1110.5,
            319.0,
            image=self.entry_image_5
        )
        self.descentry_5 = Entry(self,
            bd=0,
            bg="#1E1E1E",
            fg="#FFFFFF",
            highlightthickness=0
        )
        self.descentry_5.place(
            x=1033.0,
            y=299.0,
            width=155.0,
            height=38.0
        )

        canvas.create_text(
            1032.0,
            284.0,
            anchor="nw",
            text="Description",
            fill="#FFFEFA",
            font=("ArialRoundedMTBold", 10 * -1)
        )

        self.entry_image_6 = PhotoImage(
            file=relative_to_assets("entry_6.png"))
        self.entry_bg_6 = canvas.create_image(
            1295.5,
            320.0,
            image=self.entry_image_6
        )
        self.shippedStockentry_6 = Entry(self,
            bd=0,
            bg="#1E1E1E",
            fg="#FFFFFF",
            highlightthickness=0
        )
        self.shippedStockentry_6.place(
            x=1218.0,
            y=300.0,
            width=155.0,
            height=38.0
            
        )

        canvas.create_text(
            1217.0,
            285.0,
            anchor="nw",
            text="Shipping Stock",
            fill="#FFFEFA",
            font=("ArialRoundedMTBold", 10 * -1)
        )

        canvas.create_text(
            1033.0,
            142.0,
            anchor="nw",
            text="Variant",
            fill="#FFFEFA",
            font=("ArialRoundedMTBold", 10 * -1)
        )

        canvas.create_text(
            1216.0,
            142.0,
            anchor="nw",
            text="Size",
            fill="#FFFEFA",
            font=("ArialRoundedMTBold", 10 * -1)
        )

        self.button_image_3 = PhotoImage(
            file=relative_to_assets("button_3.png"))
        self.add = Button(self,
            image=self.button_image_3,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_3 clicked"),
            relief="flat"
        )
        self.add.place(
            x=1110.0,
            y=368.0,
            width=88.5999984741211,
            height=27.318334579467773
        )

        self.button_image_4 = PhotoImage(
            file=relative_to_assets("button_4.png"))
        self.deleteBtn = Button(self,
            image=self.button_image_4,
            borderwidth=0,
            highlightthickness=0,
            relief="flat"
        )
        self.deleteBtn.place(
            x=1110.0,
            y=407.0,
            width=92.0,
            height=30.0
        )

        self.button_image_5 = PhotoImage(
            file=relative_to_assets("button_5.png"))
        self.clearBtn = Button(self,
            image=self.button_image_5,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_5 clicked"),
            relief="flat"
        )
        self.clearBtn.place(
            x=1217.0,
            y=407.0,
            width=90.0,
            height=30.0
        )

        self.button_image_6 = PhotoImage(
            file=relative_to_assets("button_6.png"))
        self.updatebtn = Button(self,
            image=self.button_image_6,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("update clicked"),
            relief="flat"
        )
        self.updatebtn.place(
            x=1218.0,
            y=368.0,
            width=89.0,
            height=27.0
        )

        canvas.create_rectangle(
            0.0,
            0.0,
            204.0,
            778.0,
            fill="#2D2D2D",
            outline="")

        self.button_image_7 = PhotoImage(
            file=relative_to_assets("button_7.png"))
        self.logout = Button(self,
            image=self.button_image_7,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_7 clicked"),
            relief="flat"
        )
        self.logout.place(
            x=38.0,
            y=642.0,
            width=119.0,
            height=57.0
        )

        self.image_image_4 = PhotoImage(
            file=relative_to_assets("image_4.png"))
        self.image_4 = canvas.create_image(
            101.0,
            211.0,
            image=self.image_image_4
        )

        self.button_image_8 = PhotoImage(
            file=relative_to_assets("button_8.png"))
        self.button_8 = Button(self,
            image=self.button_image_8,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_8 clicked"),
            relief="flat"
        )
        self.button_8.place(
            x=23.0,
            y=284.0,
            width=135.0,
            height=29.0
        )

        self.button_image_9 = PhotoImage(
            file=relative_to_assets("button_9.png"))
        self.supply = Button(self,
            image=self.button_image_9,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_9 clicked"),
            relief="flat"
        )
        self.supply.place(
            x=25.0,
            y=240.0,
            width=103.0,
            height=35.0
        )

        self.button_image_10 = PhotoImage(
            file=relative_to_assets("button_10.png"))
        self.productsBtn = Button(self,
            image=self.button_image_10,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_10 clicked"),
            relief="flat"
        )
        self.productsBtn.place(
            x=23.0,
            y=196.0,
            width=113.0,
            height=34.0
        )

        self.button_image_11 = PhotoImage(
            file=relative_to_assets("button_11.png"))
        self.orders = Button(self,
            image=self.button_image_11,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_11 clicked"),
            relief="flat"
        )
        self.orders.place(
            x=25.0,
            y=147.0,
            width=103.0,
            height=38.0
        )

        self.button_image_12 = PhotoImage(
            file=relative_to_assets("button_12.png"))
        self.dash = Button(self,
            image=self.button_image_12,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_12 clicked"),
            relief="flat"
        )
        self.dash.place(
            x=25.0,
            y=100.0,
            width=135.0,
            height=32.0
        )

        canvas.create_text(
            74.0,
            21.0,
            anchor="nw",
            text="DBZ",
            fill="#F94444",
            font=("ArialRoundedMTBold", 24 * -1)
        )

