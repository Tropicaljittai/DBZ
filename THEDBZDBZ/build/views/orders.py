
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path
import tkinter as tk
from tkinter import ttk
# from tkinter import *
# Explicit imports to satisfy Flake8
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage




OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"C:\Users\Franz\Documents\THEDBZDBZ\build\assets\frame0")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)



class Orders(tk.Frame):
    def __init__(self, parent):
        tk.Frame.__init__(self, parent)
        self.configure(bg = "#FFFFFF")

        canvas = Canvas(
        self,
        bg = "#1E1E1E",
        height = 778,
        width = 1440,
        bd = 0,
        highlightthickness = 0,
        relief = "ridge"
        )

        canvas.place(x = 0, y = 0)
        canvas.create_text(
            232.0,
            30.0,
            anchor="nw",
            text="Orders",
            fill="#F94444",
            font=("ArialRoundedMTBold", 20 * -1)
        )

        canvas.create_text(
            1002.0,
            82.0,
            anchor="nw",
            text="Incoming orders",
            fill="#F84343",
            font=("ArialRoundedMTBold", 20 * -1)
        )

        self.style = ttk.Style(self)

        columns = ("OrderID", "CustomerID", "Name","PaymentStatus", "ShipmentStatus", "ETA")
        self.tree = ttk.Treeview(self, columns=columns, height=13, show='headings')
          # Adjust the position and size
        self.style.configure("Treeview",
                             background="#2a2d2e",
                             foreground="white",
                             rowheight=50,
                             fieldbackground="#343638",
                             bordercolor="#343638")

        self.style.map('Treeview', background=[('selected', '#F94444')])

        self.style.configure("Treeview.Heading",
                             background="#565b5e",
                             foreground="white",
                             relief="flat")

        self.style.map("Treeview.Heading",
                       background=[('active', '#F94444')])

        for col in columns:
            self.tree.heading(col, text=col, anchor=tk.CENTER)

        

        self.tree.column('OrderID', anchor=tk.CENTER, width=70)
        self.tree.column('CustomerID', anchor=tk.CENTER, width=70)
        self.tree.column('Name', anchor=tk.CENTER, width=70)
        self.tree.column('PaymentStatus', anchor=tk.CENTER, width=70)
        self.tree.column('ShipmentStatus', anchor=tk.CENTER, width=70)
        self.tree.column('ETA', anchor=tk.CENTER, width=70)
        yscrollbar = ttk.Scrollbar(self, orient="vertical", command=self.tree.yview)
        self.tree.configure(yscrollcommand=yscrollbar.set)

        # Pack the Treeview and Scrollbar
        self.tree.place(x=220, y=165, width=740, height=375)
        yscrollbar.place(x=960, y=165, height=375)

        columns2 = ("OrderID","Orderer","Date")
        self.tree2 = ttk.Treeview(self, columns=columns2, height=13, show='headings')
        self.tree2.place(x=990, y=130.0, width=410, height=530)  # Adjust the position and size
        self.style.configure("Treeview",
                             background="#2a2d2e",
                             foreground="white",
                             rowheight=50,
                             fieldbackground="#343638",
                             bordercolor="#343638")

    

        for col in columns2:
            self.tree2.heading(col, text=col, anchor=tk.CENTER)
            
        self.tree2.column('OrderID', anchor=tk.CENTER, width=100)
        self.tree2.column('Orderer', anchor=tk.CENTER, width=100)
        self.tree2.column('Date', anchor=tk.CENTER, width=100)
       
       
        yscrollbar2 = ttk.Scrollbar(self, orient="vertical", command=self.tree.yview)
        self.tree2.configure(yscrollcommand=yscrollbar2.set)

        # Pack the Treeview and Scrollbar
        yscrollbar2.place(x=1400, y=130, height=530)


        self.image_image_1 = PhotoImage(
            file=relative_to_assets("image_1.png"))
        self.image_1 = canvas.create_image(
            601.0,
            318.0,
            image=self.image_image_1
        )


        self.image_image_2 = PhotoImage(
            file=relative_to_assets("image_2.png"))
        self.image_2 = canvas.create_image(
            601.0,
            646.0,
            image=self.image_image_2
        )

        self.button_image_1 = PhotoImage(
            file=relative_to_assets("button_1.png"))
        self.updatebutton_1 = Button(self,
            image=self.button_image_1,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_1 clicked"),
            relief="flat"
        )
        self.updatebutton_1.place(
            x=796.0,
            y=699.0,
            width=73.0,
            height=40.0
        )

        self.button_image_2 = PhotoImage(
            file=relative_to_assets("button_2.png"))
        self.viewbutton_2 = Button(self,
            image=self.button_image_2,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_2 clicked"),
            relief="flat"
        )
        self.viewbutton_2.place(
            x=882.0,
            y=699.0,
            width=73.0,
            height=40.0
        )

        self.entry_image_1 = PhotoImage(
            file=relative_to_assets("entry_1.png"))
        self.entry_bg_1 = canvas.create_image(
            853.0,
            626.0,
            image=self.entry_image_1
        )
        self.etaentry_1 = Entry(self,
            bd=0,
            bg="#1E1E1E",
            fg="#FFFFFF",
            highlightthickness=0
        )
        self.etaentry_1.place(
            x=792.0,
            y=606.0,
            width=122.0,
            height=38.0
        )

        self.image_image_3 = PhotoImage(
            file=relative_to_assets("image_3.png"))
        self.image_3 = canvas.create_image(
            601.0,
            327.0,
            image=self.image_image_3
        )

        self.button_image_3 = PhotoImage(
            file=relative_to_assets("button_3.png"))
        self.backbutton_3 = Button(self,
            image=self.button_image_3,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_3 clicked"),
            relief="flat"
        )
        

        self.image_image_4 = PhotoImage(
            file=relative_to_assets("image_4.png"))
        self.image_4 = canvas.create_image(
            1206.0,
            438.0,
            image=self.image_image_4
        )

        self.button_image_4 = PhotoImage(
            file=relative_to_assets("button_4.png"))
        self.acceptbutton_4 = Button(self,
            image=self.button_image_4,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_4 clicked"),
            relief="flat"
        )
        self.acceptbutton_4.place(
            x=1247.0,
            y=690.0,
            width=73.0,
            height=40.0
        )

        self.button_image_5 = PhotoImage(
            file=relative_to_assets("button_5.png"))
        self.rejectbutton_5 = Button(self,
            image=self.button_image_5,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_5 clicked"),
            relief="flat"
        )
        self.rejectbutton_5.place(
            x=1323.0,
            y=689.0,
            width=73.0,
            height=40.0
        )

        self.entry_image_2 = PhotoImage(
            file=relative_to_assets("entry_2.png"))
        self.entry_bg_2 = canvas.create_image(
            491.5,
            96.0,
            image=self.entry_image_2
        )
        self.searchentry_2 = Entry(self,
            bd=0,
            bg="#2D2D2D",
            fg="#FFFFFF",
            highlightthickness=0
        )
        self.searchentry_2.place(
            x=236.0,
            y=76.0,
            width=511.0,
            height=38.0
        )

        canvas.create_rectangle(
            0.0,
            0.0,
            204.0,
            778.0,
            fill="#2D2D2D",
            outline="")

        self.image_image_5 = PhotoImage(
            file=relative_to_assets("image_5.png"))
        self.image_5 = canvas.create_image(
            101.0,
            165.0,
            image=self.image_image_5
        )

        self.button_image_6 = PhotoImage(
            file=relative_to_assets("button_6.png"))
        self.custbutton_6 = Button(self,
            image=self.button_image_6,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_6 clicked"),
            relief="flat"
        )
        self.custbutton_6.place(
            x=23.0,
            y=284.0,
            width=135.0,
            height=29.0
        )

        self.button_image_7 = PhotoImage(
            file=relative_to_assets("button_7.png"))
        self.supplybutton_7 = Button(self,
            image=self.button_image_7,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_7 clicked"),
            relief="flat"
        )
        self.supplybutton_7.place(
            x=25.0,
            y=240.0,
            width=103.0,
            height=35.0
        )

        self.button_image_8 = PhotoImage(
            file=relative_to_assets("button_8.png"))
        self.prodbutton_8 = Button(self,
            image=self.button_image_8,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_8 clicked"),
            relief="flat"
        )
        self.prodbutton_8.place(
            x=23.0,
            y=196.0,
            width=113.0,
            height=34.0
        )

        self.button_image_9 = PhotoImage(
            file=relative_to_assets("button_9.png"))
        self.ordersbutton_9 = Button(self,
            image=self.button_image_9,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_9 clicked"),
            relief="flat"
        )
        self.ordersbutton_9.place(
            x=25.0,
            y=147.0,
            width=103.0,
            height=38.0
        )

        self.button_image_10 = PhotoImage(
            file=relative_to_assets("button_10.png"))
        self.dashbutton_10 = Button(self,
            image=self.button_image_10,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_10 clicked"),
            relief="flat"
        )
        self.dashbutton_10.place(
            x=25.0,
            y=100.0,
            width=135.0,
            height=32.0
        )

        canvas.create_text(
            74.0,
            21.0,
            anchor="nw",
            text="DBZ",
            fill="#F94444",
            font=("ArialRoundedMTBold", 24 * -1)
        )

        self.button_image_11 = PhotoImage(
            file=relative_to_assets("button_11.png"))
        self.newOrderbutton_11 = Button(self,
            image=self.button_image_11,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_11 clicked"),
            relief="flat"
        )
        self.newOrderbutton_11.place(
            x=848.0,
            y=83.0,
            width=109.27333068847656,
            height=27.318334579467773
        )

        self.button_image_12 = PhotoImage(
            file=relative_to_assets("button_12.png"))
        self.searchbutton_12 = Button(self,
            image=self.button_image_12,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_12 clicked"),
            relief="flat"
        )
        self.searchbutton_12.place(
            x=770.0,
            y=67.0,
            width=50.0,
            height=56.0
        )

        self.button_image_13 = PhotoImage(
            file=relative_to_assets("button_13.png"))
        self.logoutbutton_13 = Button(self,
            image=self.button_image_13,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_13 clicked"),
            relief="flat"
        )
        self.logoutbutton_13.place(
            x=38.0,
            y=642.0,
            width=119.0,
            height=57.0
        )

        canvas.create_text(
            253.0,
            571.0,
            anchor="nw",
            text="Payment Status",
            fill="#F94444",
            font=("ArialRoundedMTBold", 20 * -1)
        )

        canvas.create_text(
            515.0,
            571.0,
            anchor="nw",
            text="Shipment Status",
            fill="#F94444",
            font=("ArialRoundedMTBold", 20 * -1)
        )

        canvas.create_text(
            833.0,
            571.0,
            anchor="nw",
            text="ETA",
            fill="#F94444",
            font=("ArialRoundedMTBold", 20 * -1)
        )
            






